% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/json_extractors.R
\name{jsonr_extract}
\alias{jsonr_extract}
\alias{jsonr_extract_lgl}
\alias{jsonr_extract_int}
\alias{jsonr_extract_dbl}
\alias{jsonr_extract_chr}
\alias{jsonr_extract_fct}
\alias{jsonr_extract_dat}
\alias{jsonr_extract_dtt}
\alias{jsonr_extract_lst}
\title{Extract from a json}
\usage{
jsonr_extract(x, ptype, path = zap())

jsonr_extract_lgl(x, path = zap())

jsonr_extract_int(x, path = zap())

jsonr_extract_dbl(x, path = zap())

jsonr_extract_chr(x, path = zap())

jsonr_extract_fct(x, path = zap())

jsonr_extract_dat(x, path = zap())

jsonr_extract_dtt(x, path = zap())

jsonr_extract_lst(x, path = zap(), ptype = zap())
}
\description{
Extract from a json
}
\examples{
jsonr_extract_int(x, ".b")
jsonr_extract_lst(x, ".a")
jsonr_extract_int(x, ".a.x")

if (FALSE) {
  dd \%>\%
    transmute(
      budget = jsonr_extract_lst(body, "budget"),
      amount = jsonr_extract_dbl(body, c("budget", "amount")),
    )

  db_tbl \%>\%
    mutate(
      array_parsed = jsonr_extract_lst(json_array, ptype = double()),
      array_parsed2 = jsonr_extract_dbl(json_object, path = list("Sepal.Width", 0)),
      array_species = jsonr_extract_chr(json_object, path = "Species")
    ) \%>\%
    select(-json_array, -json_object) \%>\%
    tidyr::unnest(cols = c(array_parsed))
}
}
